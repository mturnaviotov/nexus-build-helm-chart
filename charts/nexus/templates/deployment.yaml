apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    deployment.kubernetes.io/revision: "1"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      volumes:
        {{- if .Values.persistence.enabled }}
        - name: nexus-data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-data
        {{- else }}
        - name: nexus-data
          emptyDir: {}
        {{- end }}
        - name: init-script
          configMap:
            name: {{ .Release.Name }}-init-script
            defaultMode: 0755
      securityContext:
        fsGroup: 200
      containers:
        - name: nexus
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 8081
          env:
            - name: NEXUS_SECURITY_RANDOMPASSWORD
              value: "false"
            - name: INSTALL4J_ADD_VM_PARAMS
              value: "-Xms2g -Xmx4g -XX:MaxDirectMemorySize=3g -Djava.util.prefs.userRoot=/nexus-data/javaprefs"
            - name: NEXUS_SECURITY_INITIAL_PASSWORD
              value: {{ .Values.nexus.securityInitialPassword | quote }}
            - name: NEXUS_UI_DISABLED
              value: "true"
          resources:
            {{- toYaml .Values.nexus.resources | nindent 12 }}
          volumeMounts:
            - name: nexus-data
              mountPath: /nexus-data
          readinessProbe:
            httpGet:
              path: /service/rest/v1/status
              port: 8081
            initialDelaySeconds: 30
            periodSeconds: 30
          livenessProbe:
            httpGet:
              path: /service/rest/v1/status
              port: 8081
            initialDelaySeconds: 60
            periodSeconds: 30
        - name: init
          image: curlimages/curl:8.1.2
          command: ["/scripts/init.sh"]
          volumeMounts:
            - name: init-script
              mountPath: /scripts
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
